version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: paper-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-paper_ai_password}
      MYSQL_DATABASE: paper_ai
      MYSQL_USER: paper_user
      MYSQL_PASSWORD: ${DB_PASSWORD:-paper_ai_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "3306:3306"
    networks:
      - paper-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: paper-backend
    restart: always
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: paper_user
      DB_PASSWORD: ${DB_PASSWORD:-paper_ai_password}
      DB_NAME: paper_ai
      PORT: 3000
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-change-this-secret-key}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_API_BASE: ${OPENROUTER_API_BASE:-https://openrouter.ai/api/v1}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - paper-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 用户端前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${FRONTEND_API_URL:-http://localhost:3000/api}
    container_name: paper-frontend
    restart: always
    ports:
      - "5173:80"
    networks:
      - paper-network

  # 管理端前端
  admin-frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${ADMIN_API_URL:-http://localhost:3000/api}
    container_name: paper-admin
    restart: always
    ports:
      - "5174:80"
    networks:
      - paper-network

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: paper-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
      - admin-frontend
    networks:
      - paper-network

networks:
  paper-network:
    driver: bridge

volumes:
  mysql_data:
