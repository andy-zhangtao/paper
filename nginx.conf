# Nginx配置文件 - Paper AI 项目
# 用于反向代理和CORS配置

# 上游后端服务
upstream paper_backend {
    server localhost:3000;
}

# 用户前端服务
upstream paper_frontend {
    server localhost:5173;
}

# 管理后台服务
upstream paper_admin {
    server localhost:5174;
}

# 主服务器配置
server {
    listen 80;
    server_name localhost;

    # 日志配置
    access_log /var/log/nginx/paper_access.log;
    error_log /var/log/nginx/paper_error.log;

    # 全局CORS配置（应用于所有/api路由）
    set $cors_origin "";
    set $cors_methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
    set $cors_headers "Content-Type, Authorization, X-Requested-With, Accept";

    # 判断请求来源，动态设置CORS
    if ($http_origin ~* "^http://localhost:(5173|5174)$") {
        set $cors_origin $http_origin;
    }

    # ==========================================
    # API 反向代理（后端服务）
    # ==========================================
    location /api/ {
        # CORS预检请求处理
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' $cors_headers always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # CORS响应头（实际请求）
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;

        # 反向代理到后端
        proxy_pass http://paper_backend;

        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 缓冲设置
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # ==========================================
    # 管理后台 API（去掉 /admin 前缀转发到后端）
    # ==========================================
    location /admin/api/ {
        # CORS预检请求处理
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' $cors_headers always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # CORS响应头（实际请求）
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;

        # 去掉 /admin 前缀，转发到后端的 /api/
        rewrite ^/admin/api/(.*)$ /api/$1 break;
        proxy_pass http://paper_backend;

        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 缓冲设置
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # ==========================================
    # 用户前端（开发环境）
    # ==========================================
    location / {
        proxy_pass http://paper_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket支持（Vite HMR）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # ==========================================
    # 管理后台（开发环境）
    # ==========================================
    location /admin {
        rewrite ^/admin(.*)$ $1 break;
        proxy_pass http://paper_admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket支持（Vite HMR）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # ==========================================
    # 健康检查
    # ==========================================
    location /health {
        proxy_pass http://paper_backend/health;
        proxy_set_header Host $host;
        access_log off;
    }

    # ==========================================
    # 静态文件缓存（生产环境）
    # ==========================================
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # ==========================================
    # 安全配置
    # ==========================================
    # 隐藏Nginx版本号
    server_tokens off;

    # 防止iframe嵌入
    add_header X-Frame-Options "SAMEORIGIN" always;

    # XSS保护
    add_header X-XSS-Protection "1; mode=block" always;

    # 内容类型嗅探保护
    add_header X-Content-Type-Options "nosniff" always;

    # 引荐来源策略
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}

# ==========================================
# 生产环境配置示例（SSL）
# ==========================================
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#
#     # SSL证书配置
#     ssl_certificate /path/to/cert.pem;
#     ssl_certificate_key /path/to/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     # 其他配置同上...
# }
#
# # HTTP重定向到HTTPS
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
